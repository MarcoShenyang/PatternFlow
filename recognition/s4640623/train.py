# -*- coding: utf-8 -*-
"""train.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AI3ZXJ35Yk0OBhNHAKszTZsjS2zlDqtM
"""

from google.colab import drive
drive.mount('/content/gdrive')
import sys
sys.path.insert(0, 'gdrive/MyDrive/Colab Notebooks/Lab 3')

import tensorflow as tf

import modules
import dataset

data = load_data()
train, valid, test = process_data(data)

model = GraphConvolutionNetwork(graph, x, y, z)
loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
optimiser = tf.train.AdamOptimizer(0.01)

for epoch in range(30):
    with tf.GradientTape() as tape:
        logits = model(data['features'])
        # Loss is only calculated on the training set.
        loss = loss(train, logits[graph.ndata['train_mask']])
        grads = tape.gradient(loss, model.trainable_weights)
        optimiser.apply_gradients(zip(grads, model.trainable_weights))