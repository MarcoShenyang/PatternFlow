# -*- coding: utf-8 -*-
"""dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/171VT0vprvoid028yiWeUt3qmgZ54RMan

https://levelup.gitconnected.com/graph-convolutional-network-node-classification-with-tensorflow-49d3e091ea15
https://github.com/tkipf/gcn/tree/master/gcn
"""

import numpy as np
import torch
from google.colab import drive

"""Load facebook data

"""

def load_data(path='/content/gdrive', file='/MyDrive/Colab Notebooks/Lab 3/facebook.npz'):
  drive.mount('/content/gdrive', force_remount=True);
  data = np.load("{}{}".format(path, file))
  return data

data = load_data()

def process_data(dataset):
  train_ds = range(0,round(data['features'].shape[0]/3))
  valid_ds = range(round(data['features'].shape[0]/3), round(2*data['features'].shape[0]/3))
  test_ds = range(round(2*data['features'].shape[0]/3), round(2*data['features'].shape[0]))

  train_ds = torch.LongTensor(train_ds)
  valid_ds = torch.LongTensor(valid_ds)
  test_ds = torch.LongTensor(test_ds)

  features = torch.as_tensor(data['features'])
  features = features[0:round(features.size(dim = 0)/3), :]
  target = torch.from_numpy(data['target'])
  edges = torch.from_numpy(data['edges'])

  return train_ds, valid_ds, test_ds, features, target, edges

train_ds, valid_ds, test_ds, features, target, edges = process_data(data)
for item in data.files:
    print(item)
    print(data[item])
    print(data[item].size)

for n in range(data['target'].size):
  print(data['target'][n])

train, valid, test = process_data(data)
for element in train:
  print(element)